{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"index.html","text":"ThymeSave Cookbook \u00b6 The central place for all our documentation, currently heavily work in progress. Scope \u00b6 Everything related to ThymeSave will be documented here, excluding : Project setup (check the according READMEs) Code of Conduct (check the repositories in GitHub) Contribution Guidelines (check the repositories in GitHub) Motivation \u00b6 Cooking is fun, when you have time and motivation. Sometimes we struggle with this, as life goes on, and we just want to eat. That's where unhealthy habits like ditching your kitchen for the fast food restaurant. Sometimes you just cook the wrong amount, or mismatch your planing with your actual week and need to throw away food. Something that really bothered us. We needed a solution. Of course, there are a ton of recipe apps out there. So why not using one of them? We tried a lot of apps out there, but every of them had something missing, e.g.: importing recipes in different languages is not possible or duplicates ingredients in different languages allowing to not add stuff you always have at home to your shopping list, resulting in more work only native clients you need to install on devices or native clients not for all platforms we are using simply too expensive crappy user interface you need to be either always online or have something like a cloud storage sync So at the end we ended up with the idea for ThymeSave. We in this case are: Andreas Popel Timo Reymann About the name \u00b6 ThymeSave consists is a neologism consisting of: Thyme (phonetic similar to time) Save When you flip the order, you will notice it leads to Save time , and that's basically what it is all about at the end. Since Thyme can also be an ingredient, it also covers the Save the environment part. Save food, reduce waste! Vision \u00b6 The vision for ThymeSave is to provide an free, easy to use recipe app - for everyone Explanation \u00b6 Software is like sex: it's better when it's free. ~ Linus Torvalds The first thing you might notice why we listed the free? Free mainly focuses on providing the software for free. We won't charge you for using it. We all use free software every day, and it's a good idea to give back to the community. While the managed service might convert to paid (because servers unfortunately cost money) the software itself will always remain free and open to use for everyone. No matter who you are and where you are from. The second part focuses on easy to use and everyone , this includes disabled people and your mother! We want to keep things simple and intuitive. Also, everyone means no matter which language you are speaking or education you have, or even your geolocation. Definition / Usage \u00b6 Gives the direction for the entire project and alignment for everything done in the context of the project. While it is commonly used by companies also fits very well to the project, trying to inspire people and give a direction. Mission \u00b6 Empower everyone to a healthy lifestyle while utilizing resources in an sustainable, thoughtful way. Definition / Usage \u00b6 Gives the goal of this entire project. What it wants to achieve. Explanation \u00b6 We all need to eat from time to time. And let's be honest: even the best chef cooks out there like to save time now and then or just cook something, not because they like to but because they need to eat! Not everyone enjoys cooking or planning things. Also, not everyone is able to spend much money on food. And that's fine and well known. The goal is to make the app make you enjoy cooking and make it a breeze. No more hassles with what to buy, what to cook, or how to plan your week. Missing something or found a typo? \u00b6 Always feel free to create a pull request when you find something!","title":"Home"},{"location":"index.html#thymesave-cookbook","text":"The central place for all our documentation, currently heavily work in progress.","title":"ThymeSave Cookbook"},{"location":"index.html#scope","text":"Everything related to ThymeSave will be documented here, excluding : Project setup (check the according READMEs) Code of Conduct (check the repositories in GitHub) Contribution Guidelines (check the repositories in GitHub)","title":"Scope"},{"location":"index.html#motivation","text":"Cooking is fun, when you have time and motivation. Sometimes we struggle with this, as life goes on, and we just want to eat. That's where unhealthy habits like ditching your kitchen for the fast food restaurant. Sometimes you just cook the wrong amount, or mismatch your planing with your actual week and need to throw away food. Something that really bothered us. We needed a solution. Of course, there are a ton of recipe apps out there. So why not using one of them? We tried a lot of apps out there, but every of them had something missing, e.g.: importing recipes in different languages is not possible or duplicates ingredients in different languages allowing to not add stuff you always have at home to your shopping list, resulting in more work only native clients you need to install on devices or native clients not for all platforms we are using simply too expensive crappy user interface you need to be either always online or have something like a cloud storage sync So at the end we ended up with the idea for ThymeSave. We in this case are: Andreas Popel Timo Reymann","title":"Motivation"},{"location":"index.html#about-the-name","text":"ThymeSave consists is a neologism consisting of: Thyme (phonetic similar to time) Save When you flip the order, you will notice it leads to Save time , and that's basically what it is all about at the end. Since Thyme can also be an ingredient, it also covers the Save the environment part. Save food, reduce waste!","title":"About the name"},{"location":"index.html#vision","text":"The vision for ThymeSave is to provide an free, easy to use recipe app - for everyone","title":"Vision"},{"location":"index.html#explanation","text":"Software is like sex: it's better when it's free. ~ Linus Torvalds The first thing you might notice why we listed the free? Free mainly focuses on providing the software for free. We won't charge you for using it. We all use free software every day, and it's a good idea to give back to the community. While the managed service might convert to paid (because servers unfortunately cost money) the software itself will always remain free and open to use for everyone. No matter who you are and where you are from. The second part focuses on easy to use and everyone , this includes disabled people and your mother! We want to keep things simple and intuitive. Also, everyone means no matter which language you are speaking or education you have, or even your geolocation.","title":"Explanation"},{"location":"index.html#definition-usage","text":"Gives the direction for the entire project and alignment for everything done in the context of the project. While it is commonly used by companies also fits very well to the project, trying to inspire people and give a direction.","title":"Definition / Usage"},{"location":"index.html#mission","text":"Empower everyone to a healthy lifestyle while utilizing resources in an sustainable, thoughtful way.","title":"Mission"},{"location":"index.html#definition-usage_1","text":"Gives the goal of this entire project. What it wants to achieve.","title":"Definition / Usage"},{"location":"index.html#explanation_1","text":"We all need to eat from time to time. And let's be honest: even the best chef cooks out there like to save time now and then or just cook something, not because they like to but because they need to eat! Not everyone enjoys cooking or planning things. Also, not everyone is able to spend much money on food. And that's fine and well known. The goal is to make the app make you enjoy cooking and make it a breeze. No more hassles with what to buy, what to cook, or how to plan your week.","title":"Explanation"},{"location":"index.html#missing-something-or-found-a-typo","text":"Always feel free to create a pull request when you find something!","title":"Missing something or found a typo?"},{"location":"components/index.html","text":"High level overview \u00b6 ThymeSave consists of: funnel - Backend proxy functionality and configuration silverware - Frontend application, npm packages, builtin plugins CouchDB - Persisting data and syncing with PouchDB in frontend Auth0 - Managed OAuth2 service for authentication and authorization The communication hierarchy is like this: graph TD; silverware-->funnel silverware--->Auth0 funnel-->CouchDB[CouchDB Cluster] funnel-->External_Websites[External websites] funnel-->Auth0","title":"High level overview"},{"location":"components/index.html#high-level-overview","text":"ThymeSave consists of: funnel - Backend proxy functionality and configuration silverware - Frontend application, npm packages, builtin plugins CouchDB - Persisting data and syncing with PouchDB in frontend Auth0 - Managed OAuth2 service for authentication and authorization The communication hierarchy is like this: graph TD; silverware-->funnel silverware--->Auth0 funnel-->CouchDB[CouchDB Cluster] funnel-->External_Websites[External websites] funnel-->Auth0","title":"High level overview"},{"location":"components/auth0.html","text":"Auth0 \u00b6 As Oauth2 component currently ONLY Auth0 is supported, while the implementation should allow other providers as well, it's not recommended nor tested. Auth0 allows easy user management and has proven as a solid base in past projects already. While it is free, it provides great privacy, user experience and security. Further resources \u00b6 Auth0 homepage","title":"Auth0"},{"location":"components/auth0.html#auth0","text":"As Oauth2 component currently ONLY Auth0 is supported, while the implementation should allow other providers as well, it's not recommended nor tested. Auth0 allows easy user management and has proven as a solid base in past projects already. While it is free, it provides great privacy, user experience and security.","title":"Auth0"},{"location":"components/auth0.html#further-resources","text":"Auth0 homepage","title":"Further resources"},{"location":"components/couchdb.html","text":"CouchDB \u00b6 CouchDB is a clusterable, syncable document-based database system. In combination with PouchDB in the frontend and added authentication through funnel, it is a robust offline-first solution. It's de facto the only solution that works for our use case and is free and open source. Authentication \u00b6 Authentication is offloaded at funnel. JWT configuration with CouchDB is everything but straight forward, and having an explicit reverse proxy gives greater control and reduces surface for attacks. e.g. limitation of the user to its own database already on request level This also means CouchDB should not be exposed over the network in any case, which would have fatal consequences due to basically an \"admin party mode\" Structure \u00b6 Every use gets his own database. To do this, funnel provides an init endpoint which checks if the user database already exists, if this is not the case one is created. Every user database is completely flat, allowing easier sync Document ids consist of entity type and id in format entityType:uuid Document know their type stored in $entityType Further resources \u00b6 CouchDB PouchDB","title":"CouchDB"},{"location":"components/couchdb.html#couchdb","text":"CouchDB is a clusterable, syncable document-based database system. In combination with PouchDB in the frontend and added authentication through funnel, it is a robust offline-first solution. It's de facto the only solution that works for our use case and is free and open source.","title":"CouchDB"},{"location":"components/couchdb.html#authentication","text":"Authentication is offloaded at funnel. JWT configuration with CouchDB is everything but straight forward, and having an explicit reverse proxy gives greater control and reduces surface for attacks. e.g. limitation of the user to its own database already on request level This also means CouchDB should not be exposed over the network in any case, which would have fatal consequences due to basically an \"admin party mode\"","title":"Authentication"},{"location":"components/couchdb.html#structure","text":"Every use gets his own database. To do this, funnel provides an init endpoint which checks if the user database already exists, if this is not the case one is created. Every user database is completely flat, allowing easier sync Document ids consist of entity type and id in format entityType:uuid Document know their type stored in $entityType","title":"Structure"},{"location":"components/couchdb.html#further-resources","text":"CouchDB PouchDB","title":"Further resources"},{"location":"components/funnel.html","text":"Funnel \u00b6 Funnel is the small backend service, responsible for: CouchDB requests and authorization based on JWTs Fetching remote content, acting as a very restricted CORS Proxy Providing bootstrap configuration for the frontend Basic concepts / ideology \u00b6 Should be as small as possible and handle everything the user cares about in silverware Allows users to work offline for most cases and in best case daily usage keep attack surface minimal Plugin architecture allows extending the backend without altering the core provides easy extension for self-hosting allows e.g. GDPR self-service etc. to be implemented ca be combined with frontend plugin to make ThymeSave even more useful Further resources \u00b6 API docs GitHub repository","title":"Funnel"},{"location":"components/funnel.html#funnel","text":"Funnel is the small backend service, responsible for: CouchDB requests and authorization based on JWTs Fetching remote content, acting as a very restricted CORS Proxy Providing bootstrap configuration for the frontend","title":"Funnel"},{"location":"components/funnel.html#basic-concepts-ideology","text":"Should be as small as possible and handle everything the user cares about in silverware Allows users to work offline for most cases and in best case daily usage keep attack surface minimal Plugin architecture allows extending the backend without altering the core provides easy extension for self-hosting allows e.g. GDPR self-service etc. to be implemented ca be combined with frontend plugin to make ThymeSave even more useful","title":"Basic concepts / ideology"},{"location":"components/funnel.html#further-resources","text":"API docs GitHub repository","title":"Further resources"},{"location":"components/silverware.html","text":"Silverware \u00b6 Silverware is the hart of ThymeSave. It contains most of the logic, party split into separate packages allowing easier modularization: Package Scope @thymesave/core models, API definitions @thymesave/translations translations and matching functionality @thymesave/ingredients ingredient parsing, mapping and definitions @thymesave/plugin Plugin functionality for extending ThymeSave easily The frontend is completely written in TypeScript and Angular. Why Angular? \u00b6 Angular is a battle proven framework we use it in combination with Angular Material, which provides great accessibility and a few handy components out of the box. Also, with Material Design, we already have a design system that works and don't have to reinvent the wheel. To round the angular toolbox, Angular Flex is also used, providing Flexbox layouts via directives. Basic concepts / ideology \u00b6 Don't cache database stuff explicitly PouchDB is used as storage layer which gives great performance with IndexedDB A store layer is explicitly not added, reducing complexity and possible points of failures The NPM packages are as loosely coupled as possible have high test coverage, covering also most edge cases The angular part contains test where it adds value, we don't have a coverage goal here (yet) is split into components where suitable utilizes best practices where ever it makes sense, we keep it open to make own design decisions that might not be compliant with \"the angular way\" Use Observables (RxJS) and TypeScript features where ever possible promises are just used e.g. in plugins to make the entry easier for plugin developers OR if not otherwise possible Plugin-architecture from the beginning, allowing easy extension of the system without going into much detail about the UI allows developers with almost no experience to extend and contribute keeps the core small and maintainable Further resources \u00b6 Angular Angular Material Angular Flex PouchDB RxJS GitHub repository","title":"Silverware"},{"location":"components/silverware.html#silverware","text":"Silverware is the hart of ThymeSave. It contains most of the logic, party split into separate packages allowing easier modularization: Package Scope @thymesave/core models, API definitions @thymesave/translations translations and matching functionality @thymesave/ingredients ingredient parsing, mapping and definitions @thymesave/plugin Plugin functionality for extending ThymeSave easily The frontend is completely written in TypeScript and Angular.","title":"Silverware"},{"location":"components/silverware.html#why-angular","text":"Angular is a battle proven framework we use it in combination with Angular Material, which provides great accessibility and a few handy components out of the box. Also, with Material Design, we already have a design system that works and don't have to reinvent the wheel. To round the angular toolbox, Angular Flex is also used, providing Flexbox layouts via directives.","title":"Why Angular?"},{"location":"components/silverware.html#basic-concepts-ideology","text":"Don't cache database stuff explicitly PouchDB is used as storage layer which gives great performance with IndexedDB A store layer is explicitly not added, reducing complexity and possible points of failures The NPM packages are as loosely coupled as possible have high test coverage, covering also most edge cases The angular part contains test where it adds value, we don't have a coverage goal here (yet) is split into components where suitable utilizes best practices where ever it makes sense, we keep it open to make own design decisions that might not be compliant with \"the angular way\" Use Observables (RxJS) and TypeScript features where ever possible promises are just used e.g. in plugins to make the entry easier for plugin developers OR if not otherwise possible Plugin-architecture from the beginning, allowing easy extension of the system without going into much detail about the UI allows developers with almost no experience to extend and contribute keeps the core small and maintainable","title":"Basic concepts / ideology"},{"location":"components/silverware.html#further-resources","text":"Angular Angular Material Angular Flex PouchDB RxJS GitHub repository","title":"Further resources"},{"location":"design/index.html","text":"General \u00b6 Graphics are stored in the design repository. This part of the documentation covers their usage and general design guidelines. General \u00b6 Application is designed in a darker color scheme, for various reasons: easier to read with low light saves power on mobile modern devices We try to be compliant with material design where ever possible in some cases custom design is required to be different or provide better UX, this is okay as long as it doesn't look odd Why Material? \u00b6 It provides a mature well known design system that is familiar to users and easy to use. Also, the integration with different UI frameworks etc. is already really good and there are many good integrations out there.","title":"General"},{"location":"design/index.html#general","text":"Graphics are stored in the design repository. This part of the documentation covers their usage and general design guidelines.","title":"General"},{"location":"design/index.html#general_1","text":"Application is designed in a darker color scheme, for various reasons: easier to read with low light saves power on mobile modern devices We try to be compliant with material design where ever possible in some cases custom design is required to be different or provide better UX, this is okay as long as it doesn't look odd","title":"General"},{"location":"design/index.html#why-material","text":"It provides a mature well known design system that is familiar to users and easy to use. Also, the integration with different UI frameworks etc. is already really good and there are many good integrations out there.","title":"Why Material?"},{"location":"design/colors.html","text":"Colors \u00b6 Color Scheme \u00b6 General color scheme reused across the entire application Since these are exports from figma where we work with a light theme approach please make sure to invert the colors accordingly (so always use light text on dark background etc.) Primary \u00b6 Color and shadings \u00b6 Emphasis \u00b6 Secondary \u00b6 Color and shadings \u00b6 Emphasis \u00b6 Outlines (borders) \u00b6","title":"Colors"},{"location":"design/colors.html#colors","text":"","title":"Colors"},{"location":"design/colors.html#color-scheme","text":"General color scheme reused across the entire application Since these are exports from figma where we work with a light theme approach please make sure to invert the colors accordingly (so always use light text on dark background etc.)","title":"Color Scheme"},{"location":"design/colors.html#primary","text":"","title":"Primary"},{"location":"design/colors.html#color-and-shadings","text":"","title":"Color and shadings"},{"location":"design/colors.html#emphasis","text":"","title":"Emphasis"},{"location":"design/colors.html#secondary","text":"","title":"Secondary"},{"location":"design/colors.html#color-and-shadings_1","text":"","title":"Color and shadings"},{"location":"design/colors.html#emphasis_1","text":"","title":"Emphasis"},{"location":"design/colors.html#outlines-borders","text":"","title":"Outlines (borders)"},{"location":"design/logo.html","text":"Logo \u00b6 Our logo is used to represent the entire app or project. Always ensure that the background you are using has only one color or a harmoning gradient. Color Flat If it is not possible to ensure this, please use the flat logo. Dimensions \u00b6 There is no limit on how big the logo can or should be. To make sure it is readable, do not go under the size where the leaves are no longer visible. Exceptions for this are fav icons etc. where there are technical constraints. Always make sure to keep the square aspect ratio for the logo! Positioning \u00b6 The logo is placed completely centered. Always keep the protective area to make sure the logo can breathe .","title":"Logo"},{"location":"design/logo.html#logo","text":"Our logo is used to represent the entire app or project. Always ensure that the background you are using has only one color or a harmoning gradient. Color Flat If it is not possible to ensure this, please use the flat logo.","title":"Logo"},{"location":"design/logo.html#dimensions","text":"There is no limit on how big the logo can or should be. To make sure it is readable, do not go under the size where the leaves are no longer visible. Exceptions for this are fav icons etc. where there are technical constraints. Always make sure to keep the square aspect ratio for the logo!","title":"Dimensions"},{"location":"design/logo.html#positioning","text":"The logo is placed completely centered. Always keep the protective area to make sure the logo can breathe .","title":"Positioning"},{"location":"design/typography.html","text":"Typography \u00b6 Font \u00b6 The fallback stack is used so every OS uses the default font most familiar to the user. With CSS this looks e.g. like this: body { font-family : ui-sans-serif , system-ui , - apple-system , BlinkMacSystemFont , \"Segoe UI\" , Roboto , \"Helvetica Neue\" , Arial , \"Noto Sans\" , sans-serif , \"Apple Color Emoji\" , \"Segoe UI Emoji\" , \"Segoe UI Symbol\" , \"Noto Color Emoji\" ; } Font size \u00b6 Font size can vary between applications as long the application itself is consistent about sizing.","title":"Typography"},{"location":"design/typography.html#typography","text":"","title":"Typography"},{"location":"design/typography.html#font","text":"The fallback stack is used so every OS uses the default font most familiar to the user. With CSS this looks e.g. like this: body { font-family : ui-sans-serif , system-ui , - apple-system , BlinkMacSystemFont , \"Segoe UI\" , Roboto , \"Helvetica Neue\" , Arial , \"Noto Sans\" , sans-serif , \"Apple Color Emoji\" , \"Segoe UI Emoji\" , \"Segoe UI Symbol\" , \"Noto Color Emoji\" ; }","title":"Font"},{"location":"design/typography.html#font-size","text":"Font size can vary between applications as long the application itself is consistent about sizing.","title":"Font size"},{"location":"development/index.html","text":"General \u00b6 Everything related to development which is not configured directly in the project or already limited by design is documented here. Requirements \u00b6 Development with Silverware requires in general: git pre-commit enabled (not required, but strongly recommended) a GitHub account (which you can create totally free of charge) Important notes \u00b6 Always create pull requests for your changes If you are unsure about something feel free to reach out to the community or the core team, we are happy to help It's totally fine to be a bit overwhelmed at first. Take your time to understand things","title":"General"},{"location":"development/index.html#general","text":"Everything related to development which is not configured directly in the project or already limited by design is documented here.","title":"General"},{"location":"development/index.html#requirements","text":"Development with Silverware requires in general: git pre-commit enabled (not required, but strongly recommended) a GitHub account (which you can create totally free of charge)","title":"Requirements"},{"location":"development/index.html#important-notes","text":"Always create pull requests for your changes If you are unsure about something feel free to reach out to the community or the core team, we are happy to help It's totally fine to be a bit overwhelmed at first. Take your time to understand things","title":"Important notes"},{"location":"development/funnel/index.html","text":"General \u00b6 funnel is written in Golang and utilizes the standard libraries where ever applicable Requirements \u00b6 Development with Funnel requires in general: working go installation pre-commit installed and set up understanding of golang","title":"General"},{"location":"development/funnel/index.html#general","text":"funnel is written in Golang and utilizes the standard libraries where ever applicable","title":"General"},{"location":"development/funnel/index.html#requirements","text":"Development with Funnel requires in general: working go installation pre-commit installed and set up understanding of golang","title":"Requirements"},{"location":"development/funnel/extend/plugins.html","text":"Create new functionality using plugins \u00b6 Currently, funnel provides no plugin functionality, but this will be added in one of the next iterations","title":"Create new functionality using plugins"},{"location":"development/funnel/extend/plugins.html#create-new-functionality-using-plugins","text":"Currently, funnel provides no plugin functionality, but this will be added in one of the next iterations","title":"Create new functionality using plugins"},{"location":"development/silverware/index.html","text":"General \u00b6 silverware is written in TypeScript using Angular. Requirements \u00b6 Development with Silverware requires in general: working Node.js installation pre-commit installed and set up really basic understanding of TypeScript Important notes \u00b6 Make sure to enable pre-commit hooks so linting etc. runs on every commit, preventing additional efforts on PR reviews Linting ensures our files look and feel the same no matter who develops or extends. This also means you will have to deal with annoying linting errors from time to time.","title":"General"},{"location":"development/silverware/index.html#general","text":"silverware is written in TypeScript using Angular.","title":"General"},{"location":"development/silverware/index.html#requirements","text":"Development with Silverware requires in general: working Node.js installation pre-commit installed and set up really basic understanding of TypeScript","title":"Requirements"},{"location":"development/silverware/index.html#important-notes","text":"Make sure to enable pre-commit hooks so linting etc. runs on every commit, preventing additional efforts on PR reviews Linting ensures our files look and feel the same no matter who develops or extends. This also means you will have to deal with annoying linting errors from time to time.","title":"Important notes"},{"location":"development/silverware/extend/add_ingredient.html","text":"Add new ingredient \u00b6 ThymeSave is only as powerful as the ingredients we know and can detect. Walk through \u00b6 Create new ingredient The list of all ingredients is maintained in projects/thymesave/ingredients/src/lib/ingredients.ts Check if the ingredient you want to add has already an appropriate category, if not add one . Now ThymeSave knows about the ingredient, which is great! Let's go on and add translations, so we can match the ingredient information to actual localized variants. Each language has its own folder and ingredient translations maintained in projects/thymesave/translations/src/resources/<language_code>/ingredients.ts Add a singular and (if applicable pluralized translation) format is (first element: singular, second element: plural) Make sure to add at least the english version of the ingredient Make sure you added the keys in alphabetical correct order, when linting passes you can create your PR","title":"Add new ingredient"},{"location":"development/silverware/extend/add_ingredient.html#add-new-ingredient","text":"ThymeSave is only as powerful as the ingredients we know and can detect.","title":"Add new ingredient"},{"location":"development/silverware/extend/add_ingredient.html#walk-through","text":"Create new ingredient The list of all ingredients is maintained in projects/thymesave/ingredients/src/lib/ingredients.ts Check if the ingredient you want to add has already an appropriate category, if not add one . Now ThymeSave knows about the ingredient, which is great! Let's go on and add translations, so we can match the ingredient information to actual localized variants. Each language has its own folder and ingredient translations maintained in projects/thymesave/translations/src/resources/<language_code>/ingredients.ts Add a singular and (if applicable pluralized translation) format is (first element: singular, second element: plural) Make sure to add at least the english version of the ingredient Make sure you added the keys in alphabetical correct order, when linting passes you can create your PR","title":"Walk through"},{"location":"development/silverware/extend/add_ingredient_category.html","text":"Add new ingredient category \u00b6 Ingredient categories are used to group ingredients together, making it easier to organize and search. For most ingredients you will already find an appropriate category, but sometimes a new one might be required. Walk through \u00b6 Add the category Open projects/thymesave/ingredients/src/lib/ingredients.ts At the top of the file you can see different categories, grouped together, and joined to a single batch of categories Find the appropriate place and add your category Now ThymeSave knows about the category, which is great! Let's go on and add translations, so it can be properly localized and displayed to users Each language has its own folder and ingredient category translations maintained in projects/thymesave/translations/src/resources/<language_code>/ingredientCategories.ts Add a new key for your new category containing the localized name Make sure to add at least the english version of the ingredient category Make sure you added the keys in alphabetical correct order, when linting passes you can create your PR","title":"Add new ingredient category"},{"location":"development/silverware/extend/add_ingredient_category.html#add-new-ingredient-category","text":"Ingredient categories are used to group ingredients together, making it easier to organize and search. For most ingredients you will already find an appropriate category, but sometimes a new one might be required.","title":"Add new ingredient category"},{"location":"development/silverware/extend/add_ingredient_category.html#walk-through","text":"Add the category Open projects/thymesave/ingredients/src/lib/ingredients.ts At the top of the file you can see different categories, grouped together, and joined to a single batch of categories Find the appropriate place and add your category Now ThymeSave knows about the category, which is great! Let's go on and add translations, so it can be properly localized and displayed to users Each language has its own folder and ingredient category translations maintained in projects/thymesave/translations/src/resources/<language_code>/ingredientCategories.ts Add a new key for your new category containing the localized name Make sure to add at least the english version of the ingredient category Make sure you added the keys in alphabetical correct order, when linting passes you can create your PR","title":"Walk through"},{"location":"development/silverware/extend/create_plugins.html","text":"Create new functionality using plugins \u00b6 Silverware is built to allow extending important functionality using plugins. Currently, this covers: Importers for recipes The documentation will be added once we implemented the builtin plugins. This way we dog feed the technology and can improve it before making it generally available.","title":"Create new functionality using plugins"},{"location":"development/silverware/extend/create_plugins.html#create-new-functionality-using-plugins","text":"Silverware is built to allow extending important functionality using plugins. Currently, this covers: Importers for recipes The documentation will be added once we implemented the builtin plugins. This way we dog feed the technology and can improve it before making it generally available.","title":"Create new functionality using plugins"},{"location":"managed-service/index.html","text":"ThymeSave as managed service \u00b6 Not everyone is able to or wants to host the entire platform for private usage. So here comes the free offer. Use the ready to use platform, with no tracking, and fully managed updates etc. We will do our best to provide a stable, high available platform. But since it is not our day job, we can't give you a binding agreement. Service level agreements \u00b6 We can't and won't provide a service level agreement like a guaranteed uptime. Since the app is built offline-first this should also not be a problem in the first place. Since the architecture itself is built with scalability and availability as one of the top priorities, this should rarely be the case regardless. Provider \u00b6 Funnel & CouchDB \u00b6 Currently, the Oracle Cloud Free Tier is used for CouchDB & funnel, which allows running it as a cloud based service completely for free. We are really not happy with Oracle because of the terrible support and limits, so if you like the project and want to help us, feel free to suggest other solutions/providers! Silverware \u00b6 For silverware, we use the awesome CloudFlare Pages providing preview environments and also power the live page! Disclaimer \u00b6 Please note that we keep it open to us to stop the service if it gets abused heavily or find we can no longer provide the service for free. Of course, we will try our best to prevent this from happening. If that should ever happen, we will give you enough time and provide assistance on migrating and provide alternative solutions.","title":"ThymeSave as managed service"},{"location":"managed-service/index.html#thymesave-as-managed-service","text":"Not everyone is able to or wants to host the entire platform for private usage. So here comes the free offer. Use the ready to use platform, with no tracking, and fully managed updates etc. We will do our best to provide a stable, high available platform. But since it is not our day job, we can't give you a binding agreement.","title":"ThymeSave as managed service"},{"location":"managed-service/index.html#service-level-agreements","text":"We can't and won't provide a service level agreement like a guaranteed uptime. Since the app is built offline-first this should also not be a problem in the first place. Since the architecture itself is built with scalability and availability as one of the top priorities, this should rarely be the case regardless.","title":"Service level agreements"},{"location":"managed-service/index.html#provider","text":"","title":"Provider"},{"location":"managed-service/index.html#funnel-couchdb","text":"Currently, the Oracle Cloud Free Tier is used for CouchDB & funnel, which allows running it as a cloud based service completely for free. We are really not happy with Oracle because of the terrible support and limits, so if you like the project and want to help us, feel free to suggest other solutions/providers!","title":"Funnel &amp; CouchDB"},{"location":"managed-service/index.html#silverware","text":"For silverware, we use the awesome CloudFlare Pages providing preview environments and also power the live page!","title":"Silverware"},{"location":"managed-service/index.html#disclaimer","text":"Please note that we keep it open to us to stop the service if it gets abused heavily or find we can no longer provide the service for free. Of course, we will try our best to prevent this from happening. If that should ever happen, we will give you enough time and provide assistance on migrating and provide alternative solutions.","title":"Disclaimer"},{"location":"self-hosting/index.html","text":"General \u00b6 One big goal is to make it possible for everyone with some technical knowledge or anyone with a DIY attitude to self-host the entire stack. Guide will follow once everything is stable, and we can provide ready to use configs etc.","title":"General"},{"location":"self-hosting/index.html#general","text":"One big goal is to make it possible for everyone with some technical knowledge or anyone with a DIY attitude to self-host the entire stack. Guide will follow once everything is stable, and we can provide ready to use configs etc.","title":"General"}]}